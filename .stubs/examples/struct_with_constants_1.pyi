
#### This stub was autogenerated by Typedpy
###########################################

from typing import Union, Optional, Any, TypeVar, Type, NoReturn, Iterable
from typedpy import Structure

import enum
from typedpy import AbstractStructure as AbstractStructure
from typedpy import Constant as Constant
from typedpy import Enum as Enum
import enum



class EventSubject(Enum):
    foo = enum.auto()
    bar = enum.auto()




class Event(Structure):
    def __init__(
        self,
        subject: EventSubject,
        i: Optional[int] = None
    ): ...

    def shallow_clone_with_overrides(
        self,
        subject: EventSubject = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_other_class(
        cls,
        source_object: Any,
        *,
        ignore_props: Iterable[str] = None,
        subject: EventSubject = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_trusted_data(
        cls,
        source_object: Any = None,
        *,
        ignore_props: Iterable[str] = None,
        subject: EventSubject = None,
        i: Optional[int] = None
    ): ...


    subject: EventSubject
    i: Optional[int] = None


class FooEvent(Event, Structure):
    def __init__(
        self,
        name: str,
        i: Optional[int] = None
    ): ...

    def shallow_clone_with_overrides(
        self,
        name: str = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_other_class(
        cls,
        source_object: Any,
        *,
        ignore_props: Iterable[str] = None,
        name: str = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_trusted_data(
        cls,
        source_object: Any = None,
        *,
        ignore_props: Iterable[str] = None,
        name: str = None,
        i: Optional[int] = None
    ): ...


    name: str
    i: Optional[int] = None


class BarEvent(Event, Structure):
    def __init__(
        self,
        val: int,
        i: Optional[int] = None
    ): ...

    def shallow_clone_with_overrides(
        self,
        val: int = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_other_class(
        cls,
        source_object: Any,
        *,
        ignore_props: Iterable[str] = None,
        val: int = None,
        i: Optional[int] = None
    ): ...

    @classmethod
    def from_trusted_data(
        cls,
        source_object: Any = None,
        *,
        ignore_props: Iterable[str] = None,
        val: int = None,
        i: Optional[int] = None
    ): ...


    val: int
    i: Optional[int] = None

